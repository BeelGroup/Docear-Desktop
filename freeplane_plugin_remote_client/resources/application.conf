defaultAkkaRemoteOptions = {
    actor.provider = "akka.remote.RemoteActorRefProvider"
    remote.transport = "akka.remote.netty.NettyRemoteTransport"
    remote.netty.message-frame-size = 100 MiB
    remote.netty.hostname = ""
}


local {
    akka=${defaultAkkaRemoteOptions}
    #choose anonym port
    akka.remote.netty.port = 0

	# Log level used by the configured loggers (see "event-handlers") as soon
	# as they have been started; before that, see "stdout-loglevel"
	# Options: ERROR, WARNING, INFO, DEBUG
	loglevel = DEBUG
	
	# Log level for the very basic logger activated during AkkaApplication startup
	# Options: ERROR, WARNING, INFO, DEBUG
	stdout-loglevel = DEBUG

	test {
		# factor by which to scale timeouts during tests, e.g. to account for shared
		# build system load
		timefactor =  1.0
	 
		# duration of EventFilter.intercept waits after the block is finished until
		# all required messages are received
		filter-leeway = 3s
	 
		# duration to wait in expectMsg and friends outside of within() block
		# by default
		single-expect-default = 3s
	 
		# The timeout that is added as an implicit by DefaultTimeout trait
		default-timeout = 5s
	 
		calling-thread-dispatcher {
			type = akka.testkit.CallingThreadDispatcherConfigurator
		}
	}	
	
	actor {
		typed {
	      # Default timeout for typed actor methods with non-void return type
	      timeout = 180s
	    }
	    
	    default-dispatcher {
	  
		  # Dispatcher is the name of the event-based dispatcher
		  type = Dispatcher
		  # What kind of ExecutionService to use
		  executor = "thread-pool-executor"
		  # Configuration for the thread pool
		  thread-pool-executor {
		    # minimum number of threads to cap factor-based core number to
		    core-pool-size-min = 1
		    # No of core threads ... ceil(available processors * factor)
		    core-pool-size-factor = 1.0
		    # maximum number of threads to cap factor-based number to
		    core-pool-size-max = 1
		  }
		  # Throughput defines the maximum number of messages to be
		  # processed per actor before the thread jumps to the next actor.
		  # Set to 1 for as fair as possible.
		  throughput = 100
	}
	
	serializers {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
 
    serialization-bindings {
      "java.lang.String" = java
      "docs.serialization.Customer" = java
      "com.google.protobuf.Message" = proto
      "java.lang.Boolean" = myown
    }
}
	
}